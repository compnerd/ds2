name: build

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  windows:
    runs-on: windows-latest

    strategy:
      matrix:
        arch: ['Win32', 'x64'] # ['ARM', 'ARM64']

    steps:
      - uses: actions/checkout@v2

      - name: Install Build Tools
        run: choco install winflexbison3

      - name: Configure
        run: cmake -B ${{ github.workspace }}/build -C ${{ github.workspace }}/cmake/caches/MSVCWarnings.cmake -D CMAKE_BUILD_TYPE=Release -G "Visual Studio 17 2022" -A ${{ matrix.arch }} -S ${{ github.workspace }}
      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config Release

      - uses: actions/upload-artifact@v2
        with:
          name: windows-${{ matrix.arch }}-ds2
          path: |
            build/Release/ds2.exe


  mingw:
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    strategy:
      fail-fast: false
      matrix:
        include:
          - { system: ucrt64, env: ucrt-x86_64 }
          - { system: clang64, env: clang-x86_64 }
    
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.system }}
          install: >-
            flex
            bison
            mingw-w64-${{ matrix.env }}-cmake
            mingw-w64-${{ matrix.env }}-toolchain
            mingw-w64-${{ matrix.env }}-ninja

      - uses: actions/checkout@v2

      - name: Configure
        run: cmake -B $(cygpath -u '${{ github.workspace }}/build') -C $(cygpath -u '${{ github.workspace }}/cmake/caches/GNUWarnings.cmake') -D CMAKE_BUILD_TYPE=Release -G Ninja -S $(cygpath -u '${{ github.workspace }}')
      - name: Build
        run: cmake --build $(cygpath -u '${{ github.workspace }}/build') --config Release

      - uses: actions/upload-artifact@v2
        with:
          name: mingw-${{ matrix.system }}-ds2
          path: |
            build/Release/ds2.exe

  macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Configure
        run: cmake -B ${{ github.workspace }}/out -C ${{ github.workspace }}/cmake/caches/ClangWarnings.cmake -D CMAKE_BUILD_TYPE=Release -G Ninja -S ${{ github.workspace }}
      - name: Build
        run: cmake --build ${{ github.workspace }}/out --config Release

      - uses: actions/upload-artifact@v2
        with:
          name: macOS-x86_64-ds2
          path: |
            build/ds2

  linux:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - { processor: x86_64, cflags: "", cxxflags: "" }
          - { processor: i686, cflags: "-m32", cxxflags: "-m32" }

    steps:
      - uses: actions/checkout@v2
      - run: |
          sudo apt-get update
          sudo apt-get install -qq --no-install-recommends bison flex gcc-multilib g++-multilib ninja-build

      - name: Configure
        run: cmake -B ${{ github.workspace }}/build -C ${{ github.workspace }}/cmake/caches/GNUWarnings.cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_SYSTEM_NAME=Linux -D CMAKE_SYSTEM_PROCESSOR=${{ matrix.processor }} -D CMAKE_C_FLAGS=${{ matrix.cflags }} -D CMAKE_CXX_FLAGS=${{ matrix.cxxflags }} -G Ninja -S ${{ github.workspace }}
      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config Releaase

      - uses: actions/upload-artifact@v2
        with:
          name: linux-${{ matrix.processor }}-ds2
          path: |
            build/ds2
